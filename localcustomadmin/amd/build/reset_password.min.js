define(["jquery","core/modal_factory","core/str","core/ajax","core/notification"],function(l,i,o,c,w){return{open:function(d){console.log("[reset_password.open] Called with userId:",d);var s=[o.get_string("resetpassword","local_localcustomadmin"),o.get_string("newpassword","local_localcustomadmin"),o.get_string("confirmpassword","local_localcustomadmin"),o.get_string("passwordmustmatch","local_localcustomadmin"),o.get_string("passwordempty","local_localcustomadmin"),o.get_string("passwordresetsuccess","local_localcustomadmin"),o.get_string("passwordresetfailed","local_localcustomadmin")];l.when.apply(l,s).done(function(s,o,e,r,a,t,n){console.log("[reset_password.open] Strings loaded");o=l(`
                <div class="reset-password-form">
                    <div class="form-group mb-3">
                        <label for="newPassword" class="form-label">${o}</label>
                        <input type="password" class="form-control" id="newPassword" required>
                        <small class="form-text text-muted">${a}</small>
                    </div>
                    <div class="form-group mb-3">
                        <label for="confirmPassword" class="form-label">${e}</label>
                        <input type="password" class="form-control" id="confirmPassword" required>
                    </div>
                    <div id="passwordError" class="alert alert-danger d-none" role="alert">
                        ${r}
                    </div>
                </div>
            `);window.resetPasswordStrings={success:t,failure:n},i.create({type:i.types.SAVE_CANCEL,title:s,body:o}).done(function(a){console.log("[reset_password.open] Modal created successfully"),a.userId=d,a.getRoot().on("click",'[data-action="save"]',function(s){s.preventDefault(),console.log("[reset_password.open] Save button clicked");var e=a;console.log("[reset_password.handleSubmit] Starting submit");var o=(s=e.getRoot()).find("#newPassword").val().trim(),r=s.find("#confirmPassword").val().trim(),s=s.find("#passwordError");o&&r?o!==r?(s.removeClass("d-none"),console.log("[reset_password.handleSubmit] Passwords do not match")):(s.addClass("d-none"),console.log("[reset_password.handleSubmit] Sending to server - userId:",e.userId),c.call([{methodname:"local_localcustomadmin_reset_password",method:"post",args:{userid:e.userId,password:o},done:function(s){console.log("[reset_password.handleSubmit] Success:",s);let o="Senha alterada com sucesso!";window.resetPasswordStrings&&window.resetPasswordStrings.success&&(o=window.resetPasswordStrings.success),w.addNotification({message:o,type:"success"}),setTimeout(function(){e.destroy()},1500)},fail:function(s){console.error("[reset_password.handleSubmit] Error:",s);let o="Erro ao alterar a senha. Tente novamente.";window.resetPasswordStrings&&window.resetPasswordStrings.failure&&(o=window.resetPasswordStrings.failure),s&&s.error&&(o=s.error),w.addNotification({message:o,type:"danger"})}}])):(s.removeClass("d-none"),console.log("[reset_password.handleSubmit] Passwords are empty"))}),a.show()}).fail(function(s){console.error("[reset_password.open] Modal creation failed:",s),w.addNotification({message:"Erro ao criar o modal",type:"danger"})})}).fail(function(s){console.error("[reset_password.open] Error loading strings:",s),w.addNotification({message:"Erro ao carregar strings",type:"danger"})})}}});
//# sourceMappingURL=reset_password.min.js.map