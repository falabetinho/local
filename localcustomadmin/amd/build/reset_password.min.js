define(["core/modal_save_cancel","core/str","core/ajax","core/notification"],function(r,t,l,n){return{open:function(s){console.log("[reset_password.open] Called with userId:",s),Promise.all([t.get_string("resetpassword","local_localcustomadmin"),Promise.all([t.get_string("newpassword","local_localcustomadmin"),t.get_string("confirmpassword","local_localcustomadmin"),t.get_string("passwordmustmatch","local_localcustomadmin"),t.get_string("passwordempty","local_localcustomadmin")]).then(function(e){return`
                <div class="reset-password-form">
                    <div class="mb-3">
                        <label for="newPassword" class="form-label">${e[0]}</label>
                        <input type="password" class="form-control" id="newPassword" 
                               placeholder="Digite a nova senha" required>
                        <small class="form-text text-muted">
                            ${e[3]}
                        </small>
                    </div>
                    <div class="mb-3">
                        <label for="confirmPassword" class="form-label">${e[1]}</label>
                        <input type="password" class="form-control" id="confirmPassword" 
                               placeholder="Confirme a nova senha" required>
                    </div>
                    <div id="passwordError" class="alert alert-danger d-none" role="alert">
                        ${e[2]}
                    </div>
                </div>
            `})]).then(function(e){var o=e[0];let a=new r({title:o,body:e[1],buttons:{save:t.get_string("save","core"),cancel:t.get_string("cancel","core")}});return a.userId=s,a.getRoot().on(a.events.save,function(e){e.preventDefault();var o=a;console.log("[reset_password.handleSubmit] Starting submit");var s=(e=o.getRoot())[0].querySelector("#newPassword").value,r=e[0].querySelector("#confirmPassword").value,e=e[0].querySelector("#passwordError");!s.trim()||!s.trim()||s!==r?e.classList.remove("d-none"):(e.classList.add("d-none"),console.log("[reset_password.handleSubmit] Passwords validated, sending to server"),l.call([{methodname:"local_localcustomadmin_reset_password",args:{userid:o.userId,password:s},done:function(e){console.log("[reset_password.handleSubmit] Success:",e),n.addNotification({message:"Senha alterada com sucesso!",type:"success"}),setTimeout(function(){o.destroy()},1500)},fail:function(e){console.error("[reset_password.handleSubmit] Error:",e);let o="Erro ao alterar a senha. Tente novamente.";e&&e.error&&(o=e.error),n.addNotification({message:o,type:"danger"})}}]))}),a.show(),a}).catch(function(e){console.error("[reset_password.open] Error:",e),n.addNotification({message:"Erro ao abrir o modal de reset de senha",type:"danger"})})}}});
//# sourceMappingURL=reset_password.min.js.map